#The title of this activity
title: Sviluppare test case di sicurezza specifici per applicazioni
#Describe the benefit that is achieved by implementing this activity
benefit: Rilevamento di vulnerabilità facilmente individuabili specifiche dell'organizzazione
#A one sentence description of the activity
shortDescription: Utilizza l'automazione dei test di sicurezza specifici per l'applicazione.
#A multi-paragraph description of the activity
longDescription: |
  Aumenta l'efficacia degli strumenti di test di sicurezza automatizzati ottimizzandoli e personalizzandoli per i tuoi stack tecnologici e le tue applicazioni specifiche. Gli strumenti automatizzati per i test di sicurezza hanno due caratteristiche importanti: il tasso di falsi positivi, ovvero i bug e le vulnerabilità inesistenti che vengono segnalati erroneamente, e il tasso di falsi negativi, ovvero bug e vulnerabilità reali che non riescono a rilevare. Man mano che migliori nell'utilizzo di questi strumenti, punta a ridurre al minimo i tassi di falsi positivi e falsi negativi. Questo massimizza il tempo che i team di sviluppo dedicano alla revisione e alla risoluzione di problemi di sicurezza reali nelle applicazioni, riducendo l’attrito tipicamente associato all’uso di strumenti di analisi automatizzata non ottimizzati.

  Inizia disabilitando il supporto dello strumento per tecnologie e framework che non utilizzi e, dove possibile, indirizza specifiche versioni. Ciò aumenterà la velocità di esecuzione e ridurrà il numero di risultati spuri segnalati. Affidati a esperti degli strumenti di sicurezza o a team di sicurezza condivisi per testare gli strumenti in coordinamento con un gruppo selezionato di team di sviluppo motivati. Questo permetterà di identificare i falsi positivi da ignorare o rimuovere dai risultati dello strumento. Identifica specifici problemi di sicurezza e anti-pattern, privilegiando lo strumento migliore per rilevarli.

  Sfrutta le funzionalità disponibili negli strumenti per tenere conto degli stili di codifica specifici dell’applicazione e dell’organizzazione, così come degli standard tecnici. Molti strumenti di analisi statica automatizzata consentono agli utenti di scrivere regole personalizzate o modificare le regole predefinite per adattarle alle interfacce software specifiche del progetto in esame, migliorandone così accuratezza e copertura. Ad esempio, un input potenzialmente pericoloso (noto anche come contaminato) può essere contrassegnato come sicuro dopo essere passato attraverso uno specifico metodo di sanitizzazione personalizzato.

  Strategicamente, è meglio rilevare in modo affidabile un sottoinsieme limitato di problemi di sicurezza tramite strumenti automatizzati ed estendere gradualmente la copertura piuttosto che tentare di rilevare immediatamente tutti i problemi noti. Una volta che gli strumenti sono stati sufficientemente ottimizzati, possono essere resi disponibili a un maggior numero di team di sviluppo. È importante monitorare continuamente la loro efficacia percepita dai team. In forme più avanzate, si possono adottare tecniche di apprendimento automatico per identificare e filtrare automaticamente su larga scala i probabili falsi positivi.
